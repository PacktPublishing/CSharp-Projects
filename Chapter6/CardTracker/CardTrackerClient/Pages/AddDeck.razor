@page "/Decks/Add"

@using CardTracker.Contracts.Requests
@using CardTracker.Contracts.Responses
@using CardTrackerClient.Services
@inject IUserService UserService
@inject ICardApiService CardApiService
@inject NavigationManager NavigationManager

<h3>Add Deck</h3>
<p>Define the new deck to be created. This deck will be visible only to you and will start empty.</p>

<form @onsubmit="OnSubmit" class="mt-4">
    <div class="mb-3">
        <label for="deckName" class="form-label">Deck Name</label>
        <input type="text"
               class="form-control"
               id="deckName"
               placeholder="Enter deck name"
               required
               @bind="_name" />
    </div>

    <button type="submit" class="btn btn-primary">Create Deck</button>
</form>

@code {
    private string? _name;
    
    protected override void OnInitialized()
    {
        if (!UserService.IsLoggedIn)
        {
            NavigationManager.NavigateTo("/login");
        }
    }

    private Task OnSubmit()
    {
        if (string.IsNullOrEmpty(_name))
        {
            return Task.CompletedTask;
        }

        return CardApiService.CreateDeckAsync(_name)
            .ContinueWith(task =>
            {
                if (task.IsCompletedSuccessfully)
                {
                    DeckResponse newDeck = task.Result;
                    NavigationManager.NavigateTo($"/decks/{newDeck.Id}");
                }
            });
    }

}