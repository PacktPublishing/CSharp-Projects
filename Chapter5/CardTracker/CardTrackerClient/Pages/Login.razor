@using System.ComponentModel.DataAnnotations
@using CardTracker.Contracts.Requests
@using CardTracker.Contracts.Responses
@using CardTrackerClient.Services
@page "/login"
@inject IUserService UserService
@inject NavigationManager NavigationManager

<h3>Login</h3>

<EditForm Model="_model" OnValidSubmit="HandleLogin">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div>
        <label for="username">Username:</label>
        <InputText id="username" @bind-Value="_model.Username" class="form-control" />
    </div>
    <div>
        <label for="password">Password:</label>
        <InputText id="password" @bind-Value="_model.Password" type="password" class="form-control" />
    </div>
    
    <button type="submit" class="btn btn-primary mt-2">Login</button>
</EditForm>

@if (!string.IsNullOrEmpty(_message))
{
    <p>@_message</p>
}

@code {
    private readonly LoginRequest _model = new();
    
    private string? _message;

    private async Task HandleLogin()
    {
        try
        {
            await UserService.LoginAsync(_model.Username!, _model.Password!);
            
            // Redirect to Home page after successful login
            NavigationManager.NavigateTo("/");
        }
        catch (Exception ex)
        {
            _message = $"Login failed: {ex.Message}";
        }
    }
}